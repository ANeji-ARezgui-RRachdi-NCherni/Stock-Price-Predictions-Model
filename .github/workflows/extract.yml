name: Data Extraction Pipeline


on:
  push:
    branches:
      - feat-data_extraction
  schedule:
    - cron: '0 0 * * *'  # runs every day at midnight (UTC)
  workflow_dispatch:

jobs:
  extract-data:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set Up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10.0"

    - name: Install Conda 23.5.2
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.5.2-0-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH

    - name: Create Conda Environment
      shell: bash -l {0}
      run: |
        source $HOME/miniconda/bin/activate
        conda init bash
        conda env create --file environment.yml --name Stock_Price_Prediction

    - name: Authenticate with Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    
    - uses: browser-actions/setup-edge@v1
    - name: Print Edge version
      shell: pwsh
      run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion
      
    # - name: Print Edge version
    
    #   run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion

    - name: Install Edge WebDriver
      run: |
        wget https://msedgedriver.azureedge.net/134.0.3124.95/edgedriver_linux64.zip -O msedgedriver.zip
        unzip msedgedriver.zip -d msedgedriver
        chmod +x msedgedriver/msedgedriver
        echo "WEB_DRIVER_PATH=$(pwd)/msedgedriver/msedgedriver" >> $GITHUB_ENV  
 
    
    - name: get the downloads directory
      run:  xdg-user-dir DOWNLOAD

    - name: Download Data
      run: |
          current_date=$(date +'%d/%m/%Y')
          source $HOME/miniconda/bin/activate
          conda activate Stock_Price_Prediction 
          python utils/download_automation.py --date 27/03/2025          
          cd "/home/runner" || echo "No Downloads directory found."
          ls -la || echo "No csv files found."
    #       find . -type f -iname "*.csv"

    # - name: List downloaded CSV files
    #   run: |
    #     cd /downloads
    #     ls *.csv || echo "No Downloads directory found."
    
    # - name: Load the CSV files to azure storage
    #   run: dvc push 
  
    

 
