name: ETL Pipeline

on:
  workflow_dispatch:

env:
  KERAS_BACKEND: ${{ vars.KERAS_BACKEND }}
  MODEL_NAME: ${{ vars.MODEL_NAME }}
  WINDOW_SIZE: ${{ vars.WINDOW_SIZE }}
  MODEL_LOCATION: ${{ vars.MODEL_LOCATION }}
  MODEL_EVAL_THRESHHOLD: ${{ vars.MODEL_EVAL_THRESHHOLD }}
  AZURE_RESOURCE_GROUP:   ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_ML_WORKSPACE:     ${{ secrets.AZURE_ML_WORKSPACE }}
  SMTP_SERVER: ${{ vars.SMTP_SERVER }}
  SMTP_PORT: ${{ vars.SMTP_PORT }}
  SMTP_SENDER_EMAIL: ${{ vars.SMTP_SENDER_EMAIL }}
  SMTP_SENDER_PASSWORD: ${{ secrets.SMTP_SENDER_PASSWORD }}
  EMAIL_RECIPIENT: ${{ vars.EMAIL_RECIPIENT }}
  LANGSMITH_API_KEY:      ${{ secrets.LANGSMITH_API_KEY }}
  GOOGLE_API_KEY:         ${{ secrets.GOOGLE_API_KEY }}
  GOOGLE_API_KEY_1:       ${{ secrets.GOOGLE_API_KEY_1 }}
  USER_AGENT:             ${{ vars.USER_AGENT }}
  GENERATIVE_MODEL:       ${{ vars.GENERATIVE_MODEL }}
  SIMPLE_TASK_MODEL:      ${{ vars.SIMPLE_TASK_MODEL }}
  EMBEDDING_MODEL:        ${{ vars.EMBEDDING_MODEL }}
  PINECONE_API_KEY:       ${{ secrets.PINECONE_API_KEY }}
  INDEX_NAME:             ${{ secrets.INDEX_NAME }}
jobs:
  ETL:
    runs-on: ubuntu-24.04

    steps:
    - name: Generate GitHub App token
      id: generate-token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
        installation_retrieval_mode: repository
        installation_retrieval_payload: ${{ github.repository }}

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ steps.generate-token.outputs.token }}

    - name: Set current date
      run: echo "CURRENT_DATE=$(date +'%d-%m-%Y')" >> $GITHUB_ENV

    - name: Set Up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.0"

    - name: Install Conda 23.5.2
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-py311_23.5.2-0-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH

    - name: Create Conda Environment
      shell: bash -l {0}
      run: |
        source $HOME/miniconda/bin/activate
        conda init bash
        conda env create --file environment.yml --name Stock_Price_Prediction

    - name: Authenticate with Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Configure Git for GitHub App
      run: |
        git config --global user.email "stock-prices-bot@github.com"
        git config --global user.name "Stock Prices Bot"
      
    - name: Extract Data
      run: |
          source $HOME/miniconda/bin/activate
          conda activate Stock_Price_Prediction 
          dvc pull
          python -m scripts.download_data --date $CURRENT_DATE
          echo "Checking if any CSVs were created..."
          if ls data/raw/*.csv 1> /dev/null 2>&1; then
            dvc add data/raw/*.csv
            git add data/raw/*.dvc .dvc/.gitignore
            git commit -m "Add raw data for $CURRENT_DATE" || echo "No raw changes to commit"
          else
            echo "No CSV files found in data/raw/. Skipping DVC add."
          fi

    - name: Transform data
      run: |
          source $HOME/miniconda/bin/activate
          conda activate Stock_Price_Prediction
          dvc pull
          python -m scripts.process_data
          if ls data/processed/*.csv 1> /dev/null 2>&1; then
            dvc add data/processed/*.csv
            git add data/processed/*.dvc .dvc/.gitignore
            git commit -m "Update processed data for $CURRENT_DATE" || echo "No changes to commit"
          else
            echo "No CSV files found in data/processed/. Skipping DVC add."
          fi

    - name: Load data
      run: |
          source $HOME/miniconda/bin/activate
          conda activate Stock_Price_Prediction
          dvc push

    - name: Push changes to repository
      run: |
          git remote set-url origin https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/${{ github.repository }}
          git push origin ${GITHUB_REF#refs/heads/}