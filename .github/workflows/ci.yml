name: Python CI

on:
  pull_request:
    branches:
      - main
env:
  KERAS_BACKEND: ${{ vars.KERAS_BACKEND }}
  MODEL_NAME: ${{ vars.MODEL_NAME }}
  WINDOW_SIZE: ${{ vars.WINDOW_SIZE }}
  MODEL_LOCATION: ${{ vars.MODEL_LOCATION }}
  MODEL_EVAL_THRESHHOLD: ${{ vars.MODEL_EVAL_THRESHHOLD }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_ML_WORKSPACE: ${{ secrets.AZURE_ML_WORKSPACE }}
  SMTP_SERVER: ${{ vars.SMTP_SERVER }}
  SMTP_PORT: ${{ vars.SMTP_PORT }}
  SMTP_SENDER_EMAIL: ${{ vars.SMTP_SENDER_EMAIL }}
  SMTP_SENDER_PASSWORD: ${{ secrets.SMTP_SENDER_PASSWORD }}
  EMAIL_RECIPIENT: ${{ vars.EMAIL_RECIPIENT }}
  LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  GOOGLE_API_KEY_1: ${{ secrets.GOOGLE_API_KEY_1 }}
  USER_AGENT: ${{ vars.USER_AGENT }}
  GENERATIVE_MODEL: ${{ vars.GENERATIVE_MODEL }}
  SIMPLE_TASK_MODEL: ${{ vars.SIMPLE_TASK_MODEL }}
  EMBEDDING_MODEL: ${{ vars.EMBEDDING_MODEL }}
  PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
  INDEX_NAME: ${{ secrets.INDEX_NAME }}

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11.0
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.0'

    - name: Install Conda 23.5.2
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-py311_23.5.2-0-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH

    - name: Create Conda Environment
      shell: bash -l {0}
      run: |
        source $HOME/miniconda/bin/activate
        conda init bash
        conda env create --file environment.yml --name Stock_Price_Prediction

    - name: Test with pytest
      shell: bash -l {0}
      run: |
        source $HOME/miniconda/bin/activate
        conda activate Stock_Price_Prediction

        # Set PYTHONPATH to include the project root
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        
        # Debug: Show the directory structure and PYTHONPATH
        echo "Current directory structure:"
        ls -la
        echo "PYTHONPATH: $PYTHONPATH"
        
        if find . -type f \( -name "test_*.py" -o -name "*_test.py" \) -exec grep -q "^def test_" {} +; then
          echo "Non-empty test files found. Running pytest..."
          pytest tests/ -v
        else
          echo "No valid tests found."
        fi